

### Compilation

An ant file is provided, targets are 
  - compile -- compile the source code
  - war     -- create the war file to be deployed within a J2EE server
  - clean   -- perform cleanup


Installation:
  the war file contains a property file 'portal.properties' that contains configuration properties : 
    scheduler.url = the url of the scheduler
    rm.url = the url of the resource manager
	scheduler.cache.login = the login of the account to use to cache the scheduler state 
	   (must have the right to download the scheduler state)
	scheduler.cache.password = password linked to the 'cache' user

	 
The Scheduler and the resource manager login mechanism are separate processes.
One must log on on each subsystem to be able to query REST commands.
When a user logs on, a session id is returned and must be send within the header of any call otherwise an 401 (unauthorized) error is thrown.
	 
Supported  URL

Scheduler 
  scheduler/login                       
	POST username&password, return sessionid
  scheduler/status
    return the status of the scheduler
  scheduler/jobs   	  
	list job by ids
  scheduler/jobsinfo  
	list jobs by ids+additional data (class : rest_api.UserJobInfo)  
  scheduler/state				
	scheduler state (SchedulerState)
  scheduler/state/myjobsonly
	scheduler state containing only jobs of the current user

  scheduler/jobs/{jobid}
	job state of job {jobid} (JobState class)
  scheduler/jobs/{jobid}/result
	job result of job {jobid} (JobResult class)

  scheduler/jobs/{jobid}/tasks
	list job's tasks by their names   
  scheduler/jobs/{jobid}/taskstates
  	list of task's states for job {jobid} (TaskState class)
  scheduler/jobs/{jobid}/tasks/{taskname}
  	describes task {taskname} of job {jobid} (TaskState class)
  scheduler/jobs/{jobid}/tasks/{tasksid}/result
  	returns the taskResult of the task {taskname} of the job {id} (TaskResult Class)
  scheduler/jobs/{jobid}/tasks/{taskname}/result/value
  	returns a binary file (mime-type:*/*) contains the value field of the TaskResult class
  scheduler/jobs/{jobid}/tasks/{taskname}/result/log/all
    returns all the logs generated by the task
  scheduler/jobs/{jobid}/tasks/{taskname}/result/log/err
  	returns the err  stream generated by the task
  scheduler/jobs/{jobid}/tasks/{taskname}/result/log/out
  	returns the output stream generated by the task

  scheduler/jobs/{jobid}/priority/byname/{name}
    @PUT change the priority of the job (use the name of the priority)
  scheduler/jobs/{jobid}/priority/byvalue/{value}
    @PUT change the priority of the job (use the value of the priority)
  scheduler/{jobid}/pause
     @PUT pause the job
  scheduler/jobs/{jobid}/resume
     @PUT resume the job
  scheduler/jobs/{jobid}
     @DELETE delete the job
  scheduler/disconnect
     @PUT disconnect from the scheduler (and log off)
  
  scheduler/submit
     @POST submit a XML job descriptor (file must be embedded in the body of the message)
  scheduler/pause
  	 @PUT pause the scheduler
  scheduler/stop
     @PUT stop the scheduler
  scheduler/freeze
     @PUT freeze the scheduler
  scheduler/start
     @PUT start the scheduler
  scheduler/kill
     @PUT start the scheduler 
  scheduler/linkrm 
      @POST form param=rmurl 
      link the scheduler to the Resource Manager available at the url 
  
  
Resource Manager
  rm/login      POST username&password, return session id 
  rm/state 
  rm/monitoring
  rm/node       POST nodeurl (add a node)



some command-line usage :

#### scheduler 

# login 

curl -d "username=demo&password=demo" http://localhost:8080/proactive_grid_cloud_portal/scheduler/login

#submit a job

curl -H "sessionid:1" -F 'file=<Job_2_tasks.xml' http://localhost:8080/proactive_grid_cloud_portal/scheduler/submit


#list jobs (pending, running, finished)
curl -H "sessionid:1" -H "Accept: application/json" http://localhost:8080/proactive_grid_cloud_portal/scheduler/jobs/ 

# list job 10's tasks 

curl -H "sessionid:1" -H "Accept: application/json" http://localhost:8080/proactive_grid_cloud_portal/scheduler/jobs/12/tasks


#delete a job

curl -X DELETE -H "sessionid:1" -H "Accept: application/json" http://localhost:8080/proactive_grid_cloud_portal/scheduler/jobs/10

#result from a task 
curl -H "sessionid:1" -H "Accept: application/json" http://localhost:8080/proactive_grid_cloud_portal/scheduler/jobs/1/tasks/task1/result


  ### Resource Manager

curl -d "username=admin&password=admin" http://localhost:8080/proactive_grid_cloud_portal/rm/login

url -H "sessionid:1" -H "Accept: application/json" http://localhost:8080/proactive_grid_cloud_portal/rm/state

curl -H "sessionid:1" -H "Accept: application/json" http://localhost:8080/proactive_grid_cloud_portal/rm/monitoring

