<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE web-app
    PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
    "http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

	<display-name>Scheduler's Rest API</display-name>
	<!-- Set this if you want Resteasy to scan for JAX-RS classes -->
	<!-- <context-param> <param-name>resteasy.scan</param-name> <param-value>false</param-value> 
		</context-param> -->

	<context-param>
		<param-name>resteasy.scan.providers</param-name>
		<param-value>false</param-value>
	</context-param>
	<context-param>
		<param-name>resteasy.scan.resources</param-name>
		<param-value>false</param-value>
	</context-param>
	<context-param>
		<param-name>resteasy.resources</param-name>
		<param-value>org.ow2.proactive_grid_cloud_portal.scheduler.SchedulerStateRest,org.ow2.proactive_grid_cloud_portal.studio.StudioRest,org.ow2.proactive_grid_cloud_portal.rm.RMRest</param-value>
	</context-param>

	<!-- set this if you map the Resteasy servlet to something other than -->

	<context-param>
		<param-name>resteasy.servlet.mapping.prefix</param-name>
		<param-value>/rest</param-value>
	</context-param>
	<!-- to turn on security <context-param> <param-name>resteasy.role.based.security</param-name> 
		<param-value>true</param-value> </context-param> -->

	<!-- JavaMelody monitoring -->
	<filter>
		<filter-name>monitoring</filter-name>
		<filter-class>net.bull.javamelody.MonitoringFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>monitoring</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<listener>
		<listener-class>net.bull.javamelody.SessionListener</listener-class>
	</listener>

	<listener>
		<listener-class>org.ow2.proactive_grid_cloud_portal.webapp.MyResteasyBootstrap</listener-class>
	</listener>
    <listener>
        <listener-class>org.ow2.proactive_grid_cloud_portal.webapp.NoVncBootstrap</listener-class>
    </listener>


        <servlet>
                <servlet-name>atmosphere</servlet-name>
                <servlet-class>org.atmosphere.cpr.AtmosphereServlet</servlet-class>
                <init-param>
                        <param-name>org.atmosphere.cpr.sessionSupport</param-name>
                        <param-value>true</param-value>
                </init-param>
                <init-param>
                        <param-name>org.atmosphere.websocket.messageContentType</param-name>
                        <param-value>application/json</param-value>
                </init-param>
                <init-param>
                        <param-name>org.atmosphere.websocket.bufferSize</param-name>
                        <param-value>102400</param-value>
                </init-param>
                <init-param>
                        <param-name>org.atmosphere.websocket.maxTextMessageSize</param-name>
                        <param-value>102400</param-value>
                </init-param>
                <load-on-startup>0</load-on-startup>
                <async-supported>true</async-supported>
        </servlet>
        <servlet-mapping>
                <servlet-name>atmosphere</servlet-name>
                <url-pattern>/rest/*</url-pattern>
        </servlet-mapping>
        <servlet-mapping>
                <servlet-name>default</servlet-name>
                <url-pattern>/</url-pattern>
        </servlet-mapping>

	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
	</welcome-file-list>

</web-app>
